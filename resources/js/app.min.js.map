{"version":3,"sources":["src/app/services/vector/vector.js","src/app/services/camera/camera.service.js","src/app/services/capture/capture.service.js","src/app/services/capture/ccapture.service.js","src/app/services/gui/gui.service.js","src/app/services/trails/trails.service.js","src/app/app.js"],"names":["Vector","x","y","z","this","prototype","negative","add","v","subtract","multiply","divide","equals","dot","cross","length","Math","sqrt","unit","min","max","toAngles","theta","atan2","phi","asin","angleTo","a","acos","toArray","n","slice","clone","init","b","c","fromAngles","cos","sin","randomDirection","random","PI","lerp","fraction","fromArray","angleBetween","window","CameraService","RAD","radius","service","down","mouse","move","up","wheel","d","render","glsl","vector","toVector","array","Float32Array","update","method","type","name","value","u","uniforms","location","gl","getUniformLocation","program","apply","concat","e","console","log","fromVector","atan","camera","spr","CaptureService","set","canvas","snapshot","queue","promise","Promise","resolve","reject","snapshotRender","url","toDataURL","bytes","atob","buffer","Uint8Array","i","charCodeAt","blob","Blob","extension","record","MediaRecorder","captureStream","capture","chunks","stream","options","mimeType","audioBitsPerSecond","videoBitsPerSecond","recorder","ondataavailable","event","data","size","push","getTracks","forEach","track","stop","removeTrack","start","error","CCaptureService","capturer","CCapture","format","quality","framerate","save","Parser","tuple","keys","2","3","4","r","filter","enumerate","prefix","getter","key","obj","p","Array","isArray","get","Object","map","GuiService","callback","closed","hidden","pool","copy","JSON","parse","stringify","loop","params","onChange","addFolder","load","gui","locals","changed","destroy","dat","GUI","hide","show","_merge","hasOwnProperty","merge","_callback","randomize","_randomize","f","__controllers","initialValue","__min","__max","property","updateDisplay","__folders","domElement","style","display","TrailsService","history","trails","fill","t","tx","friction","shift","func","wait","context","args","result","timeout","previous","later","leading","getNow","now","remaining","arguments","clearTimeout","trailing","setTimeout","throttle","Date","getTime","vscode","acquireVsCodeApi","getState","onGlslError","message","errors","document","querySelector","errorLines","warningLines","lines","replace","m","l","Number","offset","li","uri","output","join","innerHTML","classList","call","querySelectorAll","node","index","parseInt","getAttribute","addEventListener","postMessage","command","preventDefault","stopPropagation","setAttribute","onGlslTextureError","stats","statsdom","body","content","welcome","missing","buttons","pause","export","create","mode","modes","flags","toggle","resize","glslCanvas","Canvas","backgroundColor","alpha","antialias","premultipliedAlpha","preserveDrawingBuffer","workpath","mesh","resources","extensions","doubleSided","on","o","setUniforms","remove","play","canvas_","removeEventListener","togglePause","onMove","addCanvasListeners_","recordMethod","onUpdateUniforms","end","begin","ri","vertex","trim","fragment","removeStats","textures","setTexture","filtering","repeat","then","success","String","onGlslLoadError","w","offsetWidth","h","offsetHeight","width","height","toggleRecord","recordWidth","recordHeight","forceRender","rdt","recordDuration","setProperty","rii","setInterval","stopRecord","recordStart","clearInterval","video","URL","createObjectURL","link","createElement","href","download","click","revokeObjectURL","toggleStats","visibility","Stats","showPanel","dom","appendChild","onExport","createShader","onMessage","setState","onResize","firstElementChild","setMode"],"mappings":"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","file":"resources/js/app.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    var Vector = function () {\n\n        function Vector(x, y, z) {\n            this.x = x || 0;\n            this.y = y || 0;\n            this.z = z || 0;\n        }\n\n        // Instance Methods\n        // The methods add(), subtract(), multiply(), and divide() can all take either a vector or a number as an argument.\n\n        Vector.prototype = {\n            negative: function () {\n                return new Vector(-this.x, -this.y, -this.z);\n            },\n            add: function (v) {\n                if (v instanceof Vector) return new Vector(this.x + v.x, this.y + v.y, this.z + v.z);\n                else return new Vector(this.x + v, this.y + v, this.z + v);\n            },\n            subtract: function (v) {\n                if (v instanceof Vector) return new Vector(this.x - v.x, this.y - v.y, this.z - v.z);\n                else return new Vector(this.x - v, this.y - v, this.z - v);\n            },\n            multiply: function (v) {\n                if (v instanceof Vector) return new Vector(this.x * v.x, this.y * v.y, this.z * v.z);\n                else return new Vector(this.x * v, this.y * v, this.z * v);\n            },\n            divide: function (v) {\n                if (v instanceof Vector) return new Vector(this.x / v.x, this.y / v.y, this.z / v.z);\n                else return new Vector(this.x / v, this.y / v, this.z / v);\n            },\n            equals: function (v) {\n                return this.x === v.x && this.y === v.y && this.z === v.z;\n            },\n            dot: function (v) {\n                return this.x * v.x + this.y * v.y + this.z * v.z;\n            },\n            cross: function (v) {\n                return new Vector(\n                    this.y * v.z - this.z * v.y,\n                    this.z * v.x - this.x * v.z,\n                    this.x * v.y - this.y * v.x\n                );\n            },\n            length: function () {\n                return Math.sqrt(this.dot(this));\n            },\n            unit: function () {\n                return this.divide(this.length());\n            },\n            min: function () {\n                return Math.min(Math.min(this.x, this.y), this.z);\n            },\n            max: function () {\n                return Math.max(Math.max(this.x, this.y), this.z);\n            },\n            toAngles: function () {\n                return {\n                    theta: Math.atan2(this.z, this.x),\n                    phi: Math.asin(this.y / this.length())\n                };\n            },\n            angleTo: function (a) {\n                return Math.acos(this.dot(a) / (this.length() * a.length()));\n            },\n            toArray: function (n) {\n                return [this.x, this.y, this.z].slice(0, n || 3);\n            },\n            clone: function () {\n                return new Vector(this.x, this.y, this.z);\n            },\n            init: function (x, y, z) {\n                this.x = x;\n                this.y = y;\n                this.z = z;\n                return this;\n            }\n        };\n\n        // Static Methods\n        // Vector.randomDirection() returns a vector with a length of 1 and a statistically uniform direction. Vector.lerp() performs linear interpolation between two vectors.\n\n        Vector.negative = function (a, b) {\n            b.x = -a.x;\n            b.y = -a.y;\n            b.z = -a.z;\n            return b;\n        };\n        Vector.add = function (a, b, c) {\n            if (b instanceof Vector) {\n                c.x = a.x + b.x;\n                c.y = a.y + b.y;\n                c.z = a.z + b.z;\n            } else {\n                c.x = a.x + b;\n                c.y = a.y + b;\n                c.z = a.z + b;\n            }\n            return c;\n        };\n        Vector.subtract = function (a, b, c) {\n            if (b instanceof Vector) {\n                c.x = a.x - b.x;\n                c.y = a.y - b.y;\n                c.z = a.z - b.z;\n            } else {\n                c.x = a.x - b;\n                c.y = a.y - b;\n                c.z = a.z - b;\n            }\n            return c;\n        };\n        Vector.multiply = function (a, b, c) {\n            if (b instanceof Vector) {\n                c.x = a.x * b.x;\n                c.y = a.y * b.y;\n                c.z = a.z * b.z;\n            } else {\n                c.x = a.x * b;\n                c.y = a.y * b;\n                c.z = a.z * b;\n            }\n            return c;\n        };\n        Vector.divide = function (a, b, c) {\n            if (b instanceof Vector) {\n                c.x = a.x / b.x;\n                c.y = a.y / b.y;\n                c.z = a.z / b.z;\n            } else {\n                c.x = a.x / b;\n                c.y = a.y / b;\n                c.z = a.z / b;\n            }\n            return c;\n        };\n        Vector.cross = function (a, b, c) {\n            c.x = a.y * b.z - a.z * b.y;\n            c.y = a.z * b.x - a.x * b.z;\n            c.z = a.x * b.y - a.y * b.x;\n            return c;\n        };\n        Vector.unit = function (a, b) {\n            var length = a.length();\n            b.x = a.x / length;\n            b.y = a.y / length;\n            b.z = a.z / length;\n            return b;\n        };\n        Vector.fromAngles = function (theta, phi) {\n            return new Vector(Math.cos(theta) * Math.cos(phi), Math.sin(phi), Math.sin(theta) * Math.cos(phi));\n        };\n        Vector.randomDirection = function () {\n            return Vector.fromAngles(Math.random() * Math.PI * 2, Math.asin(Math.random() * 2 - 1));\n        };\n        Vector.min = function (a, b) {\n            return new Vector(Math.min(a.x, b.x), Math.min(a.y, b.y), Math.min(a.z, b.z));\n        };\n        Vector.max = function (a, b) {\n            return new Vector(Math.max(a.x, b.x), Math.max(a.y, b.y), Math.max(a.z, b.z));\n        };\n        Vector.lerp = function (a, b, fraction) {\n            return b.subtract(a).multiply(fraction).add(a);\n        };\n        Vector.fromArray = function (a) {\n            return new Vector(a[0], a[1], a[2]);\n        };\n        Vector.angleBetween = function (a, b) {\n            return a.angleTo(b);\n        };\n\n        return Vector;\n    }();\n\n    window.Vector = Vector;\n\n}());","/* global window, console, Vector */\n\n(function () {\n    'use strict';\n\n    var CameraService = function () {\n\n        var PI = Math.PI;\n        var RAD = PI / 180;\n\n        function CameraService(theta, phi, radius) {\n            var service = this;\n            service.theta = (theta || 45) * RAD;\n            service.phi = (phi || 45) * RAD;\n            service.radius = radius || 1.0;\n        }\n\n        CameraService.prototype = {\n            down: down,\n            move: move,\n            up: up,\n            wheel: wheel,\n            render: render,\n            update: update,\n        };\n\n        CameraService.fromVector = fromVector;\n        CameraService.toVector = toVector;\n\n        // publics\n\n        function down(x, y) {\n            var service = this;\n            service.mouse = {\n                x: x,\n                y: y,\n            };\n        }\n\n        function move(x, y) {\n            var service = this,\n                mouse = service.mouse;\n            if (mouse) {\n                var theta = (x - mouse.x) * 180 * RAD;\n                var phi = (mouse.y - y) * 180 * RAD;\n                mouse.x = x;\n                mouse.y = y;\n                service.theta += theta;\n                service.phi += phi;\n            }\n        }\n\n        function up(x, y) {\n            var service = this;\n            service.mouse = null;\n        }\n\n        function wheel(d) {\n            var service = this;\n            service.radius = Math.max(0.01, service.radius + d * 0.02);\n        }\n\n        function render(glsl) {\n            var service = this;\n            var vector = CameraService.toVector(service);\n            var array = new Float32Array([vector.x, vector.y, vector.z]);\n            service.update(glsl, '3fv', 'vec3', 'u_camera', array);\n        }\n\n        function update(glsl, method, type, name, value) {\n            try {\n                var u = glsl.uniforms[name] = glsl.uniforms[name] || {};\n                u.name = name;\n                u.value = value;\n                u.type = type;\n                u.method = 'uniform' + method;\n                u.location = glsl.gl.getUniformLocation(glsl.program, name);\n                glsl.gl[u.method].apply(glsl.gl, [u.location].concat(u.value));\n            } catch (e) {\n                console.log('CameraService.update.error', e);\n            }\n        }\n\n        // statics\n\n        function fromVector(vector) {\n            var radius = vector.length();\n            var theta = Math.acos(vector.y / radius); //theta\n            var phi = Math.atan(vector.x / vector.z); //phi\n            return new CameraService(theta, phi, radius);\n        }\n\n        function toVector(camera) {\n            var spr = Math.sin(camera.phi) * camera.radius;\n            var x = spr * Math.sin(camera.theta);\n            var y = Math.cos(camera.phi) * camera.radius;\n            var z = spr * Math.cos(camera.theta);\n            return new Vector(x, y, z);\n        }\n\n        return CameraService;\n\n    }();\n\n    window.CameraService = CameraService;\n\n}());\n","/* global window, document, console, GlslCanvas */\n/*\nAuthor: Brett Camper (@professorlemeza)\nURL: https://github.com/tangrams/tangram/blob/master/src/utils/media_capture.js\n*/\n\n(function () {\n    'use strict';\n\n    function CaptureService() {}\n\n    CaptureService.prototype = {\n        set: set,\n        snapshot: snapshot,\n        snapshotRender: snapshotRender,\n        record: record,\n        stop: stop,\n    };\n\n    function set(canvas) {\n        var service = this;\n        service.canvas = canvas;\n    }\n\n    /*\n    var mimeTypes = [\n        'video/webm\\;codecs=h264',\n        'video/webm\\;codecs=vp8',\n        'video/webm\\;codecs=daala',\n        'video/webm',\n        'audio/webm\\;codecs=opus',\n        'audio/webm',\n        'video/mpeg',\n    ];\n    var options = {\n        videoBitsPerSecond: 2500000,\n        audioBitsPerSecond: 128000,\n        mimeType: 'video/webm',\n        extension: '.webm',\n    };\n    // MediaRecorder.isTypeSupported(mimeTypes[0])\n    */\n\n    function record() {\n        var service = this;\n        if (typeof window.MediaRecorder !== 'function' || !service.canvas || typeof service.canvas.captureStream !== 'function') {\n            console.log('warn: Video capture (Canvas.captureStream and/or MediaRecorder APIs) not supported by browser');\n            return false;\n        } else if (service.capture) {\n            console.log('warn: Video capture already in progress, call Scene.stopVideoCapture() first');\n            return false;\n        }\n        try {\n            var capture = {};\n            var chunks = [];\n            var stream = service.canvas.captureStream(30);\n            var options = {\n                mimeType: 'video/webm; codecs=vp9', // 'video/webm', // 'video/webm\\;codecs=h264'\n\t\t\t\taudioBitsPerSecond: 0,\n\t\t\t\tvideoBitsPerSecond: 1048576 * 10,\n            };\n            var recorder = new MediaRecorder(stream, options);\n\t\t\t// console.log('videoBitsPerSecond', recorder.videoBitsPerSecond);\n            recorder.ondataavailable = function (event) {\n                if (event.data.size > 0) {\n                    chunks.push(event.data);\n                }\n                // Stopped recording? Create the final capture file blob\n                if (capture.resolve) {\n                    var blob = new Blob(chunks, {\n                        type: options.mimeType,\n                    });\n                    if (stream) {\n                        var tracks = stream.getTracks() || [];\n                        tracks.forEach(function (track) {\n                            track.stop();\n                            stream.removeTrack(track);\n                        });\n                    }\n                    stream = null;\n                    service.recorder = null;\n                    service.capture = null;\n                    capture.resolve({\n                        blob: blob,\n                        extension: '.webm',\n                    });\n                }\n            };\n            service.capture = capture;\n            service.recorder = recorder;\n            recorder.start();\n        } catch (error) {\n            service.capture = null;\n            service.recorder = null;\n            console.log('error: Scene video capture failed', error);\n            return false;\n        }\n        return true;\n    }\n\n    function stop() {\n        var service = this;\n        if (!service.capture) {\n            console.log('warn: No scene video capture in progress, call Scene.startVideoCapture() first');\n            return Promise.resolve({});\n        }\n        service.capture.promise = new Promise(function (resolve, reject) {\n            service.capture.resolve = resolve;\n            service.capture.reject = reject;\n        });\n        service.recorder.stop();\n        return service.capture.promise;\n    }\n\n    function snapshot() {\n        var service = this;\n        if (service.queue) {\n            return service.queue.promise;\n        }\n        service.queue = {};\n        service.queue.promise = new Promise(function (resolve, reject) {\n            service.queue.resolve = resolve;\n            service.queue.reject = reject;\n        });\n        return service.queue.promise;\n    }\n\n    function snapshotRender() {\n        var service = this;\n        if (service.queue) {\n            // Get data URL, convert to blob\n            // Strip host/mimetype/etc., convert base64 to binary without UTF-8 mangling\n            // Adapted from: https://gist.github.com/unconed/4370822\n            var url = service.canvas.toDataURL('image/png');\n            var bytes = atob(url.slice(22));\n            var buffer = new Uint8Array(bytes.length);\n            for (var i = 0; i < bytes.length; ++i) {\n                buffer[i] = bytes.charCodeAt(i);\n            }\n            var blob = new Blob([buffer], {\n                type: 'image/png',\n            });\n            service.queue.resolve({\n                blob: blob,\n                extension: '.png',\n            });\n            service.queue = null;\n        }\n    }\n\n    window.CaptureService = CaptureService;\n}());\n","/* global window, document, console, GlslCanvas */\n/*\nAuthor: Brett Camper (@professorlemeza)\nURL: https://github.com/tangrams/tangram/blob/master/src/utils/media_capture.js\n*/\n\n(function () {\n    'use strict';\n\n    function CCaptureService() {\n\t\tthis.capturer = new CCapture({\n\t\t\tformat: 'webm',\n\t\t\tquality: 90,\n\t\t\tframerate: 60,\n\t\t\t// motionBlurFrames: 3,\n\t\t\t// timeLimit: window.options.recordDuration !== 0 ? window.options.recordDuration : null,\n\t\t});\n\t}\n\n    CCaptureService.prototype = {\n        set: set,\n        snapshot: snapshot,\n        snapshotRender: snapshotRender,\n        record: record,\n        stop: stop,\n    };\n\n    function set(canvas) {\n        var service = this;\n        service.canvas = canvas;\n    }\n\n    function record() {\n        var service = this;\n        var capturer = service.capturer;\n        capturer.start();\n        return true;\n    }\n\n    function stop() {\n        var service = this;\n\t\tvar capturer = service.capturer;\n        return new Promise(function (resolve, reject) {\n            capturer.stop();\n\t\t\tcapturer.save(function(blob) {\n\t\t\t\tresolve({\n\t\t\t\t\tblob: blob,\n\t\t\t\t\textension: '.webm',\n\t\t\t\t});\n\t\t\t});\n        });\n    }\n\n    function snapshot() {\n        var service = this;\n        return null;\n    }\n\n    function snapshotRender() {\n        var service = this;\n\t\tvar capturer = service.capturer;\n\t\tcapturer.capture(service.canvas);\n    }\n\n    window.CCaptureService = CCaptureService;\n}());\n","/* global window, document, console */\n\n(function () {\n\t'use strict';\n\n\tvar Parser = function () {\n\n\t\tvar Parser = {\n\t\t\tset: set,\n\t\t\tget: get,\n\t\t};\n\n\t\tfunction tuple(array) {\n\t\t\tvar tuples = {\n\t\t\t\t2: ['x', 'y'],\n\t\t\t\t3: ['x', 'y', 'z'],\n\t\t\t\t4: ['r', 'g', 'b', 'a']\n\t\t\t};\n\t\t\tvar keys = tuples[array.length];\n\t\t\tvar r = {};\n\t\t\tarray.filter(function (v, i) {\n\t\t\t\tr[keys[i]] = v;\n\t\t\t});\n\t\t\treturn r;\n\t\t}\n\n\t\tfunction enumerate(array, prefix) {\n\t\t\tvar r = {};\n\t\t\tarray.filter(function (v, i) {\n\t\t\t\tr[prefix + i] = v;\n\t\t\t});\n\t\t\treturn r;\n\t\t}\n\n\t\tfunction getter(v) {\n\t\t\treturn function (key) {\n\t\t\t\treturn v[key];\n\t\t\t};\n\t\t}\n\n\t\tfunction set(obj) {\n\t\t\tvar data = {};\n\t\t\tfor (var p in obj) {\n\t\t\t\tvar v = obj[p];\n\t\t\t\tif (Array.isArray(v)) {\n\t\t\t\t\tif (v.length > 1) {\n\t\t\t\t\t\tswitch (typeof v[0]) {\n\t\t\t\t\t\t\tcase 'number':\n\t\t\t\t\t\t\t\tif (v.length < 5) {\n\t\t\t\t\t\t\t\t\tdata[p] = tuple(v);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\t\tdata[p] = enumerate(v, 'bool_');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\t\tdata[p] = enumerate(v, 'texture_');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\tdata[p] = enumerate(v, 'struct_');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (v.length) {\n\t\t\t\t\t\tdata[p] = v[0];\n\t\t\t\t\t}\n\t\t\t\t} else if (v !== undefined && v !== null) {\n\t\t\t\t\tdata[p] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn data;\n\t\t}\n\n\t\tfunction get(obj) {\n\t\t\tvar data = {};\n\t\t\tfor (var p in obj) {\n\t\t\t\tvar v = obj[p];\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase 'function':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'number':\n\t\t\t\t\tcase 'boolean':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tdata[p] = v;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar keys = Object.keys(v);\n\t\t\t\t\t\tdata[p] = keys.map(getter(v));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log('GuiService.Parser.get', data);\n\t\t\treturn data;\n\t\t}\n\n        /*\n        float                                   <--- typeof U === 'number'\n        bool                                    <--- typeof U === 'boolean'\n        sampler2D                               <--- typeof U === 'string'\n        Structure                               <--- typeof U === 'object'\n        ARRAYS of                               <--- Array.isArray(U)\n            number                              <--- typeof U[0] === 'number'\n                float                           <--- U.length === 1\n                vec2, vec3, vec4                <--- U.length > 1 && U.length < 5\n                float[]                         <--- U.length > 4\n            sampler2D[]                         <--- typeof U[0] === 'string'\n            vec2[], vec3[], vec4[]              <--- Array.isArray(U[0]) && typeof U[0][0] === 'number'\n            Structure[]                         <--- typeof U[0] === 'object'\n\n            TODO: assume matrix for (typeof == Float32Array && length == 16)\n        TODO: support other non-float types? (int, etc.)\n        */\n\n\t\treturn Parser;\n\n\t}();\n\n\tvar GuiService = function () {\n\n\t\tfunction GuiService(callback) {\n\t\t\tthis.closed = true;\n\t\t\tthis.hidden = true;\n\t\t\tthis.callback = callback || function () {\n\t\t\t\tconsole.log('GuiService.onChange');\n\t\t\t};\n\t\t\tthis.pool = {};\n\t\t}\n\n\t\tGuiService.prototype = {\n\t\t\tload: load,\n\t\t\thide: hide,\n\t\t\tshow: show,\n\t\t\tuniforms: uniforms,\n\t\t};\n\n\t\t// statics\n\n\t\tfunction differs(a, b) {\n\t\t\t// console.log('GuiService.differs', JSON.stringify(a), JSON.stringify(b));\n\t\t\treturn JSON.stringify(a) !== JSON.stringify(b);\n\t\t}\n\n\t\tfunction copy(obj) {\n\t\t\treturn JSON.parse(JSON.stringify(obj));\n\t\t}\n\n\t\tfunction merge(a, b) {\n\t\t\tfunction _merge(a, b) {\n\t\t\t\tfor (var key in a) {\n\t\t\t\t\tif (b.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (typeof a[key] === 'number') {\n\t\t\t\t\t\t\ta[key] = b[key];\n\t\t\t\t\t\t} else if (typeof a[key] == 'object' && Object.keys(a[key]).length > 0) {\n\t\t\t\t\t\t\t_merge(a[key], b[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (a) {\n\t\t\t\ta = copy(a);\n\n\t\t\t\t_merge(a, b);\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tfunction loop(obj, params, callback) {\n\t\t\tvar keys = [],\n\t\t\t\tp;\n\t\t\tfor (p in params) {\n\t\t\t\tkeys.push(p);\n\t\t\t}\n\t\t\tkeys.filter(function (key) {\n\t\t\t\tvar value = params[key];\n\t\t\t\tif (typeof value === 'number') {\n\t\t\t\t\tp = obj.add(params, key, 0.0, 1.0);\n\t\t\t\t\tp.onChange(callback);\n\t\t\t\t} else if (typeof value === 'object' && Object.keys(value).length > 0) {\n\t\t\t\t\tp = null;\n\t\t\t\t\tvar folder = obj.addFolder(key);\n\t\t\t\t\tloop(folder, value, callback);\n\t\t\t\t} else {\n\t\t\t\t\tp = obj.add(params, key);\n\t\t\t\t\tp.onChange(callback);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction randomize(obj, params, callback) {\n\t\t\tfunction _randomize(obj, params) {\n\t\t\t\tobj.__controllers.filter(function (c) {\n\t\t\t\t\tif (typeof c.initialValue === 'number' && typeof c.__min === 'number' && typeof c.__max === 'number') {\n\t\t\t\t\t\tvar value = c.__min + (c.__max - c.__min) * Math.random();\n\t\t\t\t\t\tparams[c.property] = value;\n\t\t\t\t\t\tc.updateDisplay();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (var f in obj.__folders) {\n\t\t\t\t\t_randomize(obj.__folders[f], params[f]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_randomize(obj, params);\n\t\t\tcallback();\n\t\t}\n\n\t\t// publics\n\n\t\tfunction load(params) {\n\t\t\tvar service = this;\n\t\t\tvar gui = service.gui;\n\t\t\tvar locals = service.locals;\n\t\t\tvar changed = differs(params, locals);\n\t\t\tif (gui && changed) {\n\t\t\t\tservice.closed = gui.closed;\n\t\t\t\tgui.destroy();\n\t\t\t\tgui = null;\n\t\t\t}\n\t\t\tif (!gui) {\n\t\t\t\tgui = new dat.GUI();\n\t\t\t\tgui.closed = service.closed;\n\t\t\t\tservice.gui = gui;\n\t\t\t\tif (service.hidden) {\n\t\t\t\t\tservice.hide();\n\t\t\t\t} else {\n\t\t\t\t\tservice.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) {\n\t\t\t\tlocals = copy(params);\n\t\t\t\tservice.locals = locals;\n\t\t\t\tvar pool = Parser.set(params);\n\t\t\t\tpool = merge(pool, service.pool);\n\t\t\t\tservice.pool = pool;\n\t\t\t\tvar _callback = function () {\n\t\t\t\t\tservice.callback(pool);\n\t\t\t\t};\n\t\t\t\tloop(gui, pool, _callback);\n\t\t\t\tpool.randomize = function () {\n\t\t\t\t\trandomize(gui, pool, _callback);\n\t\t\t\t};\n\t\t\t\tgui.add(pool, 'randomize');\n\t\t\t} else {\n\t\t\t\t// console.log('GuiService.service.callback', service.pool);\n\t\t\t\tservice.callback(service.pool);\n\t\t\t}\n\t\t}\n\n\t\tfunction hide() {\n\t\t\tvar service = this;\n\t\t\tservice.hidden = true;\n\t\t\tvar gui = service.gui;\n\t\t\tif (gui) {\n\t\t\t\tgui.domElement.style.display = 'none';\n\t\t\t\t// dat.GUI.toggleHide();\n\t\t\t}\n\t\t}\n\n\t\tfunction show() {\n\t\t\tvar service = this;\n\t\t\tvar locals = service.locals;\n\t\t\tvar gui = service.gui;\n\t\t\tif (gui && Object.keys(locals).length) {\n\t\t\t\tgui.domElement.style.display = '';\n\t\t\t}\n\t\t\tservice.hidden = false;\n\t\t}\n\n\t\tfunction uniforms() {\n\t\t\tvar service = this;\n\t\t\tvar pool = service.pool;\n\t\t\treturn Parser.get(pool);\n\t\t}\n\n\t\treturn GuiService;\n\t}();\n\n\twindow.GuiService = GuiService;\n\n}());\n","/* global window, document, console */\n\n(function () {\n    'use strict';\n\n    var TrailsService = function () {\n\n        function TrailsService() {\n            var service = this;\n            service.mouse = new Float32Array([0.0, 0.0]);\n            service.history = [];\n            service.trails = new Array(10).fill(null).map(function () {\n                return new Float32Array([0.0, 0.0]);\n            });\n        }\n\n        TrailsService.prototype = {\n            render: render,\n            move: move,\n            push: throttle(_push, 1000 / 60),\n            update: update,\n        };\n\n        // statics\n\n        var getNow = Date.now || function () {\n            return new Date().getTime();\n        };\n\n        function throttle(func, wait, options) {\n            // Returns a function, that, when invoked, will only be triggered at most once\n            // during a given window of time. Normally, the throttled function will run\n            // as much as it can, without ever going more than once per `wait` duration;\n            // but if you'd like to disable the execution on the leading edge, pass\n            // `{leading: false}`. To disable execution on the trailing edge, ditto.\n            var context, args, result;\n            var timeout = null;\n            var previous = 0;\n            if (!options) options = {};\n            var later = function () {\n                previous = options.leading === false ? 0 : getNow();\n                timeout = null;\n                result = func.apply(context, args);\n                if (!timeout) context = args = null;\n            };\n            return function () {\n                var now = getNow();\n                if (!previous && options.leading === false) previous = now;\n                var remaining = wait - (now - previous);\n                context = this;\n                args = arguments;\n                if (remaining <= 0 || remaining > wait) {\n                    if (timeout) {\n                        clearTimeout(timeout);\n                        timeout = null;\n                    }\n                    previous = now;\n                    result = func.apply(context, args);\n                    if (!timeout) context = args = null;\n                } else if (!timeout && options.trailing !== false) {\n                    timeout = setTimeout(later, remaining);\n                }\n                return result;\n            };\n        }\n\n        // publics\n\n        var ti = 0;\n\n        function render(glsl) {\n            var service = this;\n            var trails = service.trails,\n                history = service.history,\n                mouse = service.mouse;\n\n            var i = 0,\n                t = trails.length;\n            var tx = history.length ? history[0] : mouse;\n            while (i < t) {\n                var e = (i > 0 ? trails[i - 1] : tx);\n                var v = trails[i];\n                var friction = 1.0 / (5.0 + i);\n                v[0] += (e[0] - v[0]) * friction;\n                v[1] += (e[1] - v[1]) * friction;\n                service.update(glsl, '2fv', 'vec2', 'u_trails[' + i + ']', v);\n                i++;\n            }\n            if (history.length) {\n                history.shift();\n            }\n        }\n\n        function move(x, y) {\n            var service = this,\n                mouse = service.mouse;\n            mouse[0] = x;\n            mouse[1] = y;\n            service.push();\n        }\n\n        function _push() {\n            var service = this;\n            service.history.push(new Float32Array(service.mouse));\n        }\n\n        function update(glsl, method, type, name, value) {\n            try {\n                var u = glsl.uniforms[name] = glsl.uniforms[name] || {};\n                u.name = name;\n                u.value = value;\n                u.type = type;\n                u.method = 'uniform' + method;\n                u.location = glsl.gl.getUniformLocation(glsl.program, name);\n                glsl.gl[u.method].apply(glsl.gl, [u.location].concat(u.value));\n            } catch (e) {\n                console.log('TrailsService.update.error', e);\n            }\n        }\n\n        return TrailsService;\n    }();\n\n    window.TrailsService = TrailsService;\n\n}());\n","(function() {\n\t'use strict';\n\n\tvar vscode = acquireVsCodeApi();\n\tvar oldState = vscode.getState();\n\t// console.log('oldState', oldState);\n\n\tfunction onLoad() {\n\t\tvar stats, statsdom;\n\n\t\tvar body = document.querySelector('body');\n\t\tvar content = document.querySelector('.content');\n\t\tvar canvas = document.querySelector('.shader');\n\t\tvar errors = document.querySelector('.errors');\n\t\tvar welcome = document.querySelector('.welcome');\n\t\tvar missing = document.querySelector('.missing');\n\t\tvar buttons = {\n\t\t\tpause: document.querySelector('.btn-pause'),\n\t\t\trecord: document.querySelector('.btn-record'),\n\t\t\tstats: document.querySelector('.btn-stats'),\n\t\t\texport: document.querySelector('.btn-export'),\n\t\t\tcreate: document.querySelector('.btn-create'),\n\t\t\tmode: document.querySelector('.btn-mode'),\n\t\t};\n\t\tvar modes = Array.prototype.slice.call(buttons.mode.querySelectorAll('li'));\n\t\tvar flags = {\n\t\t\ttoggle: false,\n\t\t\trecord: false,\n\t\t\tstats: false,\n\t\t\tmode: 'flat',\n\t\t};\n\t\tresize(true);\n\n\t\t// console.log('app.js workpath', window.options.workpath);\n\t\t// console.log('app.js resources', window.options.resources);\n\n\t\tvar glslCanvas = new glsl.Canvas(canvas, {\n\t\t\tbackgroundColor: 'rgba(0.0, 0.0, 0.0, 0.0)',\n\t\t\talpha: true,\n\t\t\tantialias: window.options.antialias,\n\t\t\tpremultipliedAlpha: false,\n\t\t\tpreserveDrawingBuffer: false,\n\t\t\tworkpath: window.options.workpath,\n\t\t\t// mesh: window.options.resources + '/model/lego.obj',\n\t\t\tmesh: window.options.resources + '/model/duck-toy.obj',\n\t\t\textensions: window.options.extensions,\n\t\t\tdoubleSided: window.options.doubleSided,\n\t\t});\n\n\t\t// console.log('glslCanvas.init', glslCanvas.mode);\n\n\t\tglslCanvas.on('load', onGlslLoad);\n\t\tglslCanvas.on('error', onGlslError);\n\t\tglslCanvas.on('textureError', onGlslTextureError);\n\n\t\t// console.log(window.options.recordMethod);\n\n\t\tvar capture = window.options.recordMethod === 'CCapture' ? new CCaptureService() : new CaptureService();\n\t\tcapture.set(canvas);\n\n\t\t// var camera = new CameraService();\n\t\tvar trails = new TrailsService();\n\n\t\tglslCanvas.on('render', function() {\n\t\t\tif (flags.stats) {\n\t\t\t\tstats.end();\n\t\t\t}\n\t\t\tif (flags.record) {\n\t\t\t\tcapture.snapshotRender();\n\t\t\t}\n\t\t\t// camera.render(glslCanvas);\n\t\t\ttrails.render(glslCanvas);\n\t\t\tif (flags.stats) {\n\t\t\t\tstats.begin();\n\t\t\t}\n\t\t});\n\n\t\tfunction onUpdateUniforms(params) {\n\t\t\tvar uniforms = gui.uniforms();\n\t\t\tglslCanvas.setUniforms(uniforms);\n\t\t}\n\n\t\tvar gui = new GuiService(onUpdateUniforms);\n\n\t\tload();\n\n\t\tfunction load() {\n\t\t\tvar o = window.options;\n\t\t\to.vertex = o.vertex.trim().length > 0 ? o.vertex : null;\n\t\t\to.fragment = o.fragment.trim().length > 0 ? o.fragment : null;\n\t\t\tif (o.fragment || o.vertex) {\n\t\t\t\tbody.classList.remove('idle', 'empty');\n\t\t\t\tbody.classList.add('ready');\n\t\t\t} else {\n\t\t\t\tbody.classList.remove('idle', 'ready')\n\t\t\t\tbody.classList.add('empty');\n\t\t\t\tremoveStats();\n\t\t\t}\n\t\t\tfor (var t in o.textures) {\n\t\t\t\tglslCanvas.setTexture('u_texture_' + t, o.textures[t], {\n\t\t\t\t\tfiltering: 'mipmap',\n\t\t\t\t\trepeat: true,\n\t\t\t\t});\n\t\t\t\t// console.log('texture', t, o.textures[t]);\n\t\t\t}\n\t\t\t// console.log(o.fragment, o.vertex);\n\t\t\tglslCanvas.load(o.fragment, o.vertex).then(success => {\n\t\t\t\tmissing.classList.remove('active');\n\t\t\t}, error => {\n\t\t\t\tmissing.classList.add('active');\n\t\t\t\tonGlslLoadError(error);\n\t\t\t\treturn;\n\t\t\t});\n\t\t}\n\n\t\tfunction onGlslLoad() {\n\t\t\tvar o = window.options;\n\t\t\tgui.load(o.uniforms);\n\t\t\tglslCanvas.setUniforms(gui.uniforms());\n\t\t\terrors.classList.remove('active');\n\t\t\tif (o.uri) {\n\t\t\t\twelcome.classList.remove('active');\n\t\t\t} else {\n\t\t\t\twelcome.classList.add('active');\n\t\t\t}\n\t\t\tif (flags.pause) {\n\t\t\t\tglslCanvas.pause();\n\t\t\t} else {\n\t\t\t\tglslCanvas.play();\n\t\t\t}\n\t\t\tswapCanvas_(glslCanvas.canvas);\n\t\t}\n\n\t\tfunction resize() {\n\t\t\tvar w = content.offsetWidth;\n\t\t\tvar h = content.offsetHeight;\n\t\t\tcanvas.style.width = w + 'px';\n\t\t\tcanvas.style.height = h + 'px';\n\t\t}\n\n\t\tfunction snapshot() {\n\t\t\tglslCanvas.forceRender = true;\n\t\t\tglslCanvas.render();\n\t\t\t// return capture.snapshot();\n\t\t}\n\n\t\tfunction recordStart() {\n\t\t\tif (window.options.recordWidth > 0 && window.options.recordHeight > 0) {\n\t\t\t\tcontent.style.width = window.options.recordWidth + 'px';\n\t\t\t\tcontent.style.height = window.options.recordHeight + 'px';\n\t\t\t}\n\t\t\tresize();\n\t\t\tglslCanvas.forceRender = true;\n\t\t\tglslCanvas.render();\n\t\t\tif (capture.record()) {\n\t\t\t\t// flags.record = true;\n\t\t\t}\n\t\t\tconst rdt = window.options.recordDuration;\n\t\t\t// if (rdt > 0) {\n\t\t\t\twindow.rdt = rdt;\n\t\t\t\tbody.style.setProperty('--record-duration', window.rdt);\n\t\t\t\twindow.rii = setInterval(function() {\n\t\t\t\t\tif (rdt > 0) {\n\t\t\t\t\t\twindow.rdt--;\n\t\t\t\t\t\tbody.style.setProperty('--record-duration', window.rdt);\n\t\t\t\t\t\tif (window.rdt === 0) {\n\t\t\t\t\t\t\tstopRecord();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.rdt++;\n\t\t\t\t\t\tbody.style.setProperty('--record-duration', window.rdt);\n\t\t\t\t\t}\n\t\t\t\t}, 1000);\n\t\t\t\t/*\n\t\t\t\twindow.rto = setTimeout(function() {\n\t\t\t\t\tstopRecord();\n\t\t\t\t}, window.options.recordDuration * 1000);\n\t\t\t\t*/\n\t\t\t// }\n\t\t}\n\n\t\tfunction recordStop() {\n\t\t\tif (window.rii) {\n\t\t\t\tclearInterval(window.rii);\n\t\t\t\twindow.rii = null;\n\t\t\t}\n\t\t\t/*\n\t\t\tif (window.rto) {\n\t\t\t\tclearTimeout(window.rto);\n\t\t\t\twindow.rto = null;\n\t\t\t}\n\t\t\t*/\n\t\t\tcapture.stop().then(function(video) {\n\t\t\t\tcontent.style.width = '';\n\t\t\t\tcontent.style.height = '';\n\t\t\t\tresize();\n\t\t\t\tvar url = URL.createObjectURL(video.blob);\n\t\t\t\tvar link = document.createElement('a');\n\t\t\t\tlink.href = url;\n\t\t\t\tlink.download = 'shader' + video.extension;\n\t\t\t\tlink.click();\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\twindow.URL.revokeObjectURL(url);\n\t\t\t\t}, 100);\n\t\t\t});\n\t\t}\n\n\t\tfunction togglePause() {\n\t\t\tif (flags.pause) {\n\t\t\t\tflags.pause = false;\n\t\t\t\t/*\n\t\t\t\tif (glslCanvas.timePause) {\n\t\t\t\t\tglslCanvas.timePrev = new Date();\n\t\t\t\t\tglslCanvas.timeLoad += (glslCanvas.timePrev - glslCanvas.timePause);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tglslCanvas.play();\n\t\t\t\tbuttons.pause.querySelector('i').setAttribute('class', 'icon-pause');\n\t\t\t} else {\n\t\t\t\tflags.pause = true;\n\t\t\t\tglslCanvas.pause();\n\t\t\t\t/*\n\t\t\t\tglslCanvas.timePause = new Date();\n\t\t\t\t*/\n\t\t\t\tbuttons.pause.querySelector('i').setAttribute('class', 'icon-play');\n\t\t\t}\n\t\t}\n\n\t\tfunction toggleRecord() {\n\t\t\tflags.record = !flags.record;\n\t\t\tif (flags.record) {\n\t\t\t\tstartRecord();\n\t\t\t} else {\n\t\t\t\tstopRecord();\n\t\t\t}\n\t\t}\n\n\t\tfunction startRecord() {\n\t\t\t// if (window.options.recordDuration > 0) {\n\t\t\t\tbody.classList.add('recording');\n\t\t\t// }\n\t\t\tbuttons.record.setAttribute('class', 'btn btn-record active');\n\t\t\tbuttons.record.querySelector('i').setAttribute('class', 'icon-stop');\n\t\t\trecordStart();\n\t\t}\n\n\t\tfunction stopRecord() {\n\t\t\tif (window.rii) {\n\t\t\t\tclearInterval(window.rii);\n\t\t\t}\n\t\t\tflags.record = false;\n\t\t\tbody.classList.remove('recording');\n\t\t\tbuttons.record.setAttribute('class', 'btn btn-record');\n\t\t\tbuttons.record.querySelector('i').setAttribute('class', 'icon-record');\n\t\t\trecordStop();\n\t\t}\n\n\t\tfunction toggleStats() {\n\t\t\tflags.stats = !flags.stats;\n\t\t\t/*\n\t\t\tfunction statsTick() {\n\t\t\t\tstats.update();\n\t\t\t\tif (flags.stats) {\n\t\t\t\t\trequestAnimationFrame(statsTick);\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\t\t\tif (flags.stats) {\n\t\t\t\tif (!statsdom) {\n\t\t\t\t\tstats = new Stats();\n\t\t\t\t\tstats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n\t\t\t\t\tstatsdom = stats.dom;\n\t\t\t\t\tstatsdom.setAttribute('class', 'stats');\n\t\t\t\t\t// statsdom.style.cssText = 'position:fixed;top:0;right:0;cursor:pointer;opacity:0.9;z-index:10000';\n\t\t\t\t\tdocument.body.appendChild(stats.dom);\n\t\t\t\t} else {\n\t\t\t\t\tstatsdom.style.visibility = 'visible';\n\t\t\t\t}\n\t\t\t\t// requestAnimationFrame(statsTick);\n\t\t\t\tgui.show();\n\t\t\t\tbuttons.stats.setAttribute('class', 'btn btn-stats active');\n\t\t\t} else {\n\t\t\t\tremoveStats();\n\t\t\t}\n\t\t}\n\n\t\tfunction removeStats() {\n\t\t\tif (statsdom) {\n\t\t\t\tstatsdom.style.visibility = 'hidden';\n\t\t\t}\n\t\t\tgui.hide();\n\t\t\tbuttons.stats.setAttribute('class', 'btn btn-stats');\n\t\t\tflags.stats = false;\n\t\t}\n\n\t\tfunction onExport(e) {\n\t\t\t// console.log('app.onExport');\n\t\t\twindow.options.mode = glslCanvas.mode;\n\t\t\tvscode.postMessage({\n\t\t\t\tcommand: 'onExport',\n\t\t\t\tdata: JSON.stringify(window.options),\n\t\t\t});\n\t\t}\n\n\t\tfunction createShader(e) {\n\t\t\tvscode.postMessage({\n\t\t\t\tcommand: 'createShader',\n\t\t\t\tdata: null,\n\t\t\t});\n\t\t}\n\n\t\tfunction onMessage(event) {\n\t\t\twindow.options = JSON.parse(event.data);\n\t\t\t// console.log('window.options', window.options);\n\t\t\tvscode.setState(window.options);\n\t\t\tload();\n\t\t}\n\n\t\tvar ri;\n\t\tfunction onResize() {\n\t\t\tif (ri) {\n\t\t\t\tclearTimeout(ri);\n\t\t\t}\n\t\t\tri = setTimeout(resize, 50);\n\t\t}\n\n\t\tvar ui;\n\t\tfunction updateUniforms(e) {\n\t\t\tif (ui) {\n\t\t\t\tclearTimeout(ui);\n\t\t\t}\n\t\t\tui = setTimeout(function() {\n\t\t\t\tonUpdateUniforms();\n\t\t\t}, 1000 / 25);\n\t\t}\n\n\t\t/*\n\t\tfunction onDown(e) {\n\t\t\tvar min = Math.min(content.offsetWidth, content.offsetHeight);\n\t\t\tcamera.down(e.x / min, e.y / min);\n\t\t}\n\t\t*/\n\n\t\tfunction onMove(e) {\n\t\t\t// var min = Math.min(content.offsetWidth, content.offsetHeight);\n\t\t\t// camera.move(e.x / min, e.y / min);\n\t\t\ttrails.move(e.x, content.offsetHeight - e.y);\n\t\t}\n\n\t\t/*\n\t\tfunction onUp(e) {\n\t\t\tvar min = Math.min(content.offsetWidth, content.offsetHeight);\n\t\t\tcamera.up(e.x / min, e.y / min);\n\t\t}\n\t\t*/\n\n\t\t/*\n\t\tfunction onWheel(e) {\n\t\t\tcamera.wheel(e.wheelDelta / Math.abs(e.wheelDelta));\n\t\t}\n\t\t*/\n\n\t\tfunction swapCanvas_(canvas_) {\n\t\t\tif (canvas !== canvas_) {\n\t\t\t\tremoveCanvasListeners_();\n\t\t\t\tcanvas = canvas_;\n\t\t\t\taddCanvasListeners_();\n\t\t\t\t// capture.set(canvas);\n\t\t\t}\n\t\t}\n\n\t\tfunction setMode(mode) {\n\t\t\t// console.log('mode', mode);\n\t\t\tbuttons.mode.firstElementChild.setAttribute('class', 'icon-' + mode);\n\t\t\tflags.mode = mode;\n\t\t\tglslCanvas.setMode(mode);\n\t\t}\n\n\t\tfunction addCanvasListeners_() {\n\t\t\tcanvas.addEventListener('dblclick', togglePause);\n\t\t\t// canvas.addEventListener('mousedown', onDown);\n\t\t\tcanvas.addEventListener('mousemove', onMove);\n\t\t}\n\n\t\tfunction removeCanvasListeners_() {\n\t\t\tcanvas.removeEventListener('dblclick', togglePause);\n\t\t\t// canvas.removeEventListener('mousedown', onDown);\n\t\t\tcanvas.removeEventListener('mousemove', onMove);\n\t\t}\n\n\t\tfunction addListeners_() {\n\t\t\t// window.addEventListener('mouseup', onUp);\n\t\t\t// window.addEventListener('wheel', onWheel);\n\t\t\tbuttons.pause.addEventListener('mousedown', togglePause);\n\t\t\tbuttons.record.addEventListener('mousedown', toggleRecord);\n\t\t\tbuttons.stats.addEventListener('mousedown', toggleStats);\n\t\t\tbuttons.export.addEventListener('mousedown', onExport);\n\t\t\tbuttons.create.addEventListener('click', createShader);\n\t\t\tbuttons.mode.addEventListener('mouseenter', function() {\n\t\t\t\tbuttons.mode.classList.add('hover');\n\t\t\t});\n\t\t\tbuttons.mode.addEventListener('mouseleave', function() {\n\t\t\t\tbuttons.mode.classList.remove('hover');\n\t\t\t});\n\t\t\tmodes.forEach(function(node) {\n\t\t\t\tnode.addEventListener('mousedown', function() {\n\t\t\t\t\tmodes.forEach(function(x) {\n\t\t\t\t\t\tx === node ? x.classList.add('active') : x.classList.remove('active');\n\t\t\t\t\t});\n\t\t\t\t\tvar value = node.getAttribute('value');\n\t\t\t\t\tsetMode(value);\n\t\t\t\t})\n\t\t\t});\n\t\t\twindow.addEventListener('message', onMessage, false);\n\t\t\twindow.addEventListener('resize', onResize);\n\t\t\terrors.addEventListener('click', function() {\n\t\t\t\tclearDiagnostic();\n\t\t\t});\n\t\t\taddCanvasListeners_();\n\t\t}\n\n\t\taddListeners_();\n\t\tresize();\n\t\tvscode.setState(window.options);\n\t}\n\n\tfunction clearDiagnostic() {\n\t\tvscode.postMessage({\n\t\t\tcommand: 'clearDiagnostic',\n\t\t\tdata: null,\n\t\t});\n\t}\n\n\tfunction revealGlslLine(data) {\n\t\tvscode.postMessage({\n\t\t\tcommand: 'revealGlslLine',\n\t\t\tdata: JSON.stringify(data),\n\t\t});\n\t}\n\n\tfunction onGlslError(message) {\n\t\t// console.log('onGlslError', message);\n\t\tvar options = window.options\n\t\tvar errors = document.querySelector('.errors');\n\t\tvar errorLines = [],\n\t\t\twarningLines = [],\n\t\t\tlines = [];\n\t\tmessage.error.replace(/ERROR: \\d+:(\\d+): \\'(.+)\\' : (.+)/g, function(m, l, v, t) {\n\t\t\tl = Number(l) - message.offset;\n\t\t\tvar li = '<li><span class=\"error\" unselectable reveal-line=\"' + lines.length + '\"><span class=\"line\">ERROR line ' + l + '</span> <span class=\"value\" title=\"' + v + '\">' + v + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></span></li>';\n\t\t\terrorLines.push(li);\n\t\t\tlines.push([options.uri, l, 'ERROR (' + v + ') ' + t]);\n\t\t\treturn li;\n\t\t});\n\t\tmessage.error.replace(/WARNING: \\d+:(\\d+): \\'(.*\\n*|.*|\\n*)\\' : (.+)/g, function(m, l, v, t) {\n\t\t\tl = Number(l) - message.offset;\n\t\t\tvar li = '<li><span class=\"warning\" unselectable reveal-line=\"' + lines.length + '\"><span class=\"line\">WARN line ' + l + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></span></li>';\n\t\t\twarningLines.push(li);\n\t\t\tlines.push([options.uri, l, 'ERROR (' + v + ') ' + t]);\n\t\t\treturn li;\n\t\t});\n\t\tvar output = '<div class=\"errors-content\"><div class=\"title\">glsl-canvas error</div><ul>';\n\t\toutput += errorLines.join('\\n');\n\t\toutput += warningLines.join('\\n');\n\t\toutput += '</ul></div>';\n\t\terrors.innerHTML = output;\n\t\terrors.classList.add('active');\n\t\t// console.log('onGlslError', 'errorLines', errorLines, 'warningLines', warningLines);\n\t\t[].slice.call(document.querySelectorAll('.errors [reveal-line]')).forEach(function(node) {\n\t\t\tvar index = parseInt(node.getAttribute('reveal-line'));\n\t\t\tnode.addEventListener('click', function(event) {\n\t\t\t\trevealGlslLine(lines[index]);\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\t\t});\n\t\tdocument.querySelector('body').setAttribute('class', 'idle');\n\t\t/*\n\t\tvar body = document.querySelector('body');\n\t\tbody.classList.remove('ready', 'empty');\n\t\tbody.classList.add('idle');\n\t\t*/\n\t}\n\n\tfunction onGlslTextureError(error) {\n\t\t// console.log('onGlslTextureError', error);\n\t\tvscode.postMessage({\n\t\t\tcommand: 'textureError',\n\t\t\tdata: JSON.stringify(error),\n\t\t});\n\t}\n\n\tfunction onGlslLoadError(error) {\n\t\tvscode.postMessage({\n\t\t\tcommand: 'loadError',\n\t\t\tdata: JSON.stringify({ message: String(error) }),\n\t\t});\n\t}\n\n\twindow.addEventListener('load', onLoad);\n\n}());\n"]}